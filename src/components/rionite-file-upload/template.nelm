@section/inner {

ul/file-list {
	@Repeat (for=file of files, track-by=id) {
		li/file {
			div/file-preview-wrapper {
				@IfThen (if=file.readed) {
					@IfThen (if=file.isImage) {
						img/file-preview (_src={file.dataURI})
					}
					@IfElse (if=file.isImage) {
						svg/file-icon (viewBox=0 0 32 32) {
							use (xlink:href=#RioniteFileUpload__iconFile)
						}
					}
				}
				@IfElse (if=file.readed) {
					svg/file-loading-icon (viewBox=0 0 32 32) {
						use (xlink:href=#RioniteFileUpload__iconSpinner)
					}
				}
			}

			span/file-text {
				'{file.name}'
			}

			button/btn-remove-file (data-file-id={file.id}) {
				svg/btn-remove-file-icon (viewBox=0 0 32 32) {
					use (xlink:href=#RioniteFileUpload__iconTrash)
				}
			}
		}
	}
}

div/drop-zone (error={error}) {
	div/drop-zone-error-message-wrapper {
		span/drop-zone-error-message {
			'{errorMessage}'
		}
	}

	span/drop-zone-text {
		'{constructor.i18n.dropFilesHereOr}'
		br

		button/btn-select-files {
			'{constructor.i18n.btnSelectFilesText}'
		}
	}
}

input/files-input (type=file, multiple)

}